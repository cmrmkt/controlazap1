-- Create the lembretes table that's missing
CREATE TABLE IF NOT EXISTS public.lembretes (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT now(),
  userid UUID NOT NULL,
  descricao TEXT,
  data DATE,
  valor DECIMAL(10,2)
);

-- Enable RLS on lembretes
ALTER TABLE public.lembretes ENABLE ROW LEVEL SECURITY;

-- Create RLS policies for lembretes
CREATE POLICY "Users can view their own lembretes" ON public.lembretes
FOR SELECT USING (auth.uid() = userid);

CREATE POLICY "Users can create their own lembretes" ON public.lembretes
FOR INSERT WITH CHECK (auth.uid() = userid);

CREATE POLICY "Users can update their own lembretes" ON public.lembretes
FOR UPDATE USING (auth.uid() = userid);

CREATE POLICY "Users can delete their own lembretes" ON public.lembretes
FOR DELETE USING (auth.uid() = userid);

-- Fix the transacoes table to match what the code expects
-- Rename usuario_id to userid (keep existing data)
ALTER TABLE public.transacoes RENAME COLUMN usuario_id TO userid;

-- Add category_id column if it doesn't exist and populate from categoria
ALTER TABLE public.transacoes ADD COLUMN IF NOT EXISTS category_id UUID;

-- Update category_id with values from categoria column
UPDATE public.transacoes SET category_id = categoria WHERE categoria IS NOT NULL;

-- Create the foreign key relationship
ALTER TABLE public.transacoes 
ADD CONSTRAINT transacoes_category_id_fkey 
FOREIGN KEY (category_id) REFERENCES public.categorias(id);

-- Now we can drop the old categoria column
ALTER TABLE public.transacoes DROP COLUMN IF EXISTS categoria;